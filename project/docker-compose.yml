version: '3'

services:
  contentdelivery-service:
    build:
      context: ./../contentdelivery-service
      dockerfile: ./../contentdelivery-service/content-service.dockerfile
    restart: always
    ports:
      - "8000:8000"
    deploy:
      mode: replicated
      replicas: 1

  newsaggregator-service:
    build:
      context: ./../newsaggregator-service
      dockerfile: ./../newsaggregator-service/news.dockerfile
    restart: always
    ports:
      - "8001:8001"
    deploy:  
      mode: replicated
      replicas: 1       

  user-service:
    build:
      context:  ./../user-service
      dockerfile: ./../user-service/user.dockerfile 
    restart: always
    ports:
      - "8080:8080"
    deploy:  
      mode: replicated
      replicas: 1
    #same env variables as the postgres and redis servcie 
    environment:
      DSN: postgres://postgres_render_x5cr_user:nzCDkeBYVmu8v9XwNnoMZ5sY8Wuwqeh3@dpg-clnmme6qc21c73fd72b0-a.oregon-postgres.render.com/postgres_render_x5cr
      SECRET_KEY: HMACSHA1
      REDIS: rediss://red-clnmo16qc21c73fd85e0:1hYjZVXVY7HoIwFxsMuJouEJ4CstpkBn@oregon-redis.render.com:6379
      ##Development
      DSN1: postgres://postgres:philippians@localhost:5432/postgres?sslmode=disable
      REDIS1: localhost:6379
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: philippians
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432  
      REDIS2: redis:6379

  redis:
    image: 'redis:alpine'
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - ./db-data/redis/:/data

  postgres:
    image: 'postgres:14.2-alpine'
    ports:
      - "5432:5432"
    restart: "always"  
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: philippians
      POSTGRES_DB: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    #volumes set for data to persist
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
